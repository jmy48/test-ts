Info 0    [16:57:15.333] Starting TS Server
Info 1    [16:57:15.333] Version: 5.2.2
Info 2    [16:57:15.333] Arguments: /usr/local/bin/node /Users/joshuaying/emblem/semantic-graph/test-ts/node_modules/typescript/lib/tsserver.js --serverMode partialSemantic --useInferredProjectPerProjectRoot --disableAutomaticTypingAcquisition --cancellationPipeName /private/var/folders/1k/1hld73x1599dxmy2mtdx1jg00000gn/T/f40be155cd98adecba29575df4d21de9/tscancellation* --logVerbosity verbose --logFile /Users/joshuaying/emblem/semantic-graph/test-ts/src/.log/tsserver-log-fNd1Wy/tsserver.log --locale en --validateDefaultNpmLocation --useNodeIpc
Info 3    [16:57:15.333] Platform: darwin NodeVersion: v19.6.0 CaseSensitive: false
Info 4    [16:57:15.333] ServerMode: 1 hasUnknownServerMode: undefined
Info 5    [16:57:15.337] request:
    {
      "seq": 0,
      "type": "request",
      "command": "configure",
      "arguments": {
        "formatOptions": {
          "newLineCharacter": "\n"
        },
        "preferences": {
          "allowIncompleteCompletions": true,
          "allowRenameOfImportPath": true,
          "allowTextChangesInNewFiles": true,
          "disableLineTextInReferences": true,
          "disableSuggestions": false,
          "displayPartsForJSDoc": true,
          "generateReturnInDocTemplate": true,
          "importModuleSpecifierEnding": "auto",
          "importModuleSpecifierPreference": "shortest",
          "includeAutomaticOptionalChainCompletions": true,
          "includeCompletionsForImportStatements": true,
          "includeCompletionsForModuleExports": true,
          "includeCompletionsWithClassMemberSnippets": true,
          "includeCompletionsWithInsertText": true,
          "includeCompletionsWithObjectLiteralMethodSnippets": true,
          "includeCompletionsWithSnippetText": true,
          "includeInlayEnumMemberValueHints": false,
          "includeInlayFunctionLikeReturnTypeHints": false,
          "includeInlayFunctionParameterTypeHints": false,
          "includeInlayParameterNameHints": "none",
          "includeInlayParameterNameHintsWhenArgumentMatchesName": false,
          "includeInlayPropertyDeclarationTypeHints": false,
          "includeInlayVariableTypeHints": false,
          "includeInlayVariableTypeHintsWhenTypeMatchesName": false,
          "includePackageJsonAutoImports": "auto",
          "jsxAttributeCompletionStyle": "auto",
          "lazyConfiguredProjectsFromExternalProject": false,
          "organizeImportsAccentCollation": true,
          "organizeImportsCaseFirst": false,
          "organizeImportsCollation": "ordinal",
          "organizeImportsCollationLocale": "en",
          "organizeImportsIgnoreCase": "auto",
          "organizeImportsNumericCollation": false,
          "providePrefixAndSuffixTextForRename": true,
          "provideRefactorNotApplicableReason": true,
          "quotePreference": "auto"
        }
      }
    }
Info 6    [16:57:15.338] Format host information updated
Info 7    [16:57:15.338] response:
    {"seq":0,"type":"response","command":"configure","request_seq":0,"success":true}
Perf 8    [16:57:15.338] 0::configure: async elapsed time (in milliseconds) 0.4841
Info 9    [16:57:15.339] request:
    {
      "seq": 1,
      "type": "request",
      "command": "open",
      "arguments": {
        "file": "/Users/joshuaying/emblem/semantic-graph/test-ts/src/sequence-generator.ts",
        "fileContent": "////The SequenceGenerator class is an abstract class that allows for the creation\n//of\n////sequences of any type. It has a generic type parameter T, which allows for\n//the\n////generation of sequences of any type. The class has three properties:\n//combiner,\n////windowSize, and generationLength. The combiner property is of type\n//Combiner<T>,\n////which is an interface that defines a method for combining\n//elements of type T.\n////The windowSize property is a number that determines the\n//size of the window used\n////for combining elements in the sequence. The\n//generationLength property is also a\n////number that determines the length of the\n//sequence to be generated.\n//\n////The constructor of the SequenceGenerator class\n//takes in three parameters:\n////windowSize, generationLength, and combiner. These\n//parameters are used to\n////initialize the corresponding properties of the class.\n//The constructor ensures\n////that the properties are properly set before the\n//sequence generation process\n////begins.\n//\n////The generateSequence method is\n//responsible for generating the sequence. It uses\n////the getStartingSequence\n//method, which is an abstract method that must be\n////implemented by any class that\n//extends the SequenceGenerator class. This method\n////returns the starting sequence\n//for the generation process. The generateSequence\n////method then uses a for loop\n//to iterate through the generationLength and\n////generate the sequence by combining\n//the latest window of elements using the\n////combiner's combine method. The final\n//sequence is then returned.\n//\n////Overall, the SequenceGenerator class provides a\n//flexible and customizable way\n////to generate sequences of any type by allowing\n//for the use of different types of\n////combiners and window sizes. It also promotes\n//code reusability by using the\n////generic type parameter and abstract\n//methods.\n//__Users__joshuaying__emblem__semantic-graph__test-ts__src__sequence-generator.ts)0_0-21_1[Class][SequenceGenerator]\n//The SequenceGenerator class is an abstract class that represents a generator for\n//a sequence of elements of type T. It has three properties: combiner, windowSize,\n//and generationLength. The combiner property is of type Combiner<T>, which is an\n//interface that defines a method for combining a list of elements of type T. The\n//windowSize property is a number that represents the size of the window used for\n//generating the sequence. The generationLength property is also a number that\n//represents the length of the sequence to be generated.\n//\n//The class has a\n//constructor that takes in the windowSize, generationLength, and combiner as\n//parameters. These parameters are used to initialize the properties of the class.\n//The constructor ensures that the properties are properly set before the class\n//can be used.\n//\n//The class also has an abstract method called\n//getStartingSequence(), which is used to get the starting sequence for the\n//generation process. This method must be implemented by any class that extends\n//the SequenceGenerator class.\n//\n//The class also has a method called\n//generateSequence(), which is used to generate the sequence. It uses the\n//getStartingSequence() method to get the starting sequence and then uses a for\n//loop to generate the remaining elements of the sequence. It uses the combiner\n//property to combine the latest window of elements and add it to the sequence.\n//The method returns the generated sequence as an array of elements of type\n//T.\n//\n//The SequenceGenerator class is a generic class, which means it can work with\n//any type of element. This allows for flexibility and reusability of the\n//class.\n//\n//The NumberAdder class is an example of a class that can be used as the\n//combiner for the SequenceGenerator class. It implements the Combiner interface\n//with a generic type of number. It provides a method called combine() that takes\n//in a list of numbers and uses the reduce function to combine them into a single\n//number. This class can be used as the combiner for the SequenceGenerator class\n//to generate a sequence of\n//numbers.\n//ce-generator.ts__51_0-78_1[Class][SequenceGenerator]\n//ce-generator.ts__90_0-123_1[Class][SequenceGenerator]\nabstract class SequenceGenerator<T> {\n// __Users__joshuaying__emblem__semantic-graph__test-ts__src__sequence-generator.ts)1_4-1_26[Property][combiner]\n// ce-generator.ts__53_4-53_26[Property][combiner]\n// ce-generator.ts__93_4-93_26[Property][combiner]\n    combiner: Combiner<T>;\n// __Users__joshuaying__emblem__semantic-graph__test-ts__src__sequence-generator.ts)2_4-2_23[Property][windowSize]\n// ce-generator.ts__55_4-55_23[Property][windowSize]\n// ce-generator.ts__96_4-96_23[Property][windowSize]\n    windowSize: number;\n// __Users__joshuaying__emblem__semantic-graph__test-ts__src__sequence-generator.ts)3_4-3_29[Property][generationLength]\n// ce-generator.ts__57_4-57_29[Property][generationLength]\n// ce-generator.ts__99_4-99_29[Property][generationLength]\n    generationLength: number;\n\n// __Users__joshuaying__emblem__semantic-graph__test-ts__src__sequence-generator.ts)5_4-9_5[Method][constructor]\n// ce-generator.ts__60_4-64_5[Method][constructor]\n// ce-generator.ts__103_4-107_5[Method][constructor]\n    constructor(windowSize: number, generationLength: number, combiner: Combiner<T>) {\n        this.windowSize = windowSize;\n        this.generationLength = generationLength;\n        this.combiner = combiner;\n    }\n\n// __Users__joshuaying__emblem__semantic-graph__test-ts__src__sequence-generator.ts)11_4-18_5[Method][generateSequence]\n// ce-generator.ts__67_4-74_5[Method][generateSequence]\n// ce-generator.ts__111_4-118_5[Method][generateSequence]\n    generateSequence(): T[] {\n        var sequence = this.getStartingSequence();\n        for (var i = 0; i < this.generationLength; i++) {\n            const latest_window = sequence.slice(sequence.length - this.windowSize);\n            sequence.push(this.combiner.combine(latest_window))\n        }\n        return sequence;\n    }\n\n// __Users__joshuaying__emblem__semantic-graph__test-ts__src__sequence-generator.ts)20_4-20_40[Method][getStartingSequence]\n// ce-generator.ts__77_4-77_40[Method][getStartingSequence]\n// ce-generator.ts__122_4-122_40[Method][getStartingSequence]\n    abstract getStartingSequence(): T[];\n}\n\n\n//\n//__Users__joshuaying__emblem__semantic-graph__test-ts__src__sequence-generator.ts)24_0-26_1[Interface][Combiner]\n//ce-generator.ts__83_0-86_1[Interface][Combiner]\n//ce-generator.ts__129_0-133_1[Interface][Combiner]\ninterface Combiner<T> {\n// __Users__joshuaying__emblem__semantic-graph__test-ts__src__sequence-generator.ts)25_4-25_22[Method][combine]\n// ce-generator.ts__85_4-85_22[Method][combine]\n// ce-generator.ts__132_4-132_22[Method][combine]\n    combine(l: T[]): T\n}\n\n//The class NumberAdder is a type of Combiner that specifically works with\n//numbers. It has a method called combine that takes in an array of numbers and\n//returns a single number that is the sum of all the numbers in the array. This is\n//achieved by using the reduce method on the array, which iterates through each\n//element and adds it to the previous element until a single value is returned.\n//The class implements the Combiner interface, which allows it to work with any\n//type of data as long as it has a combine method that takes in an array of that\n//type and returns a single value of that type. This makes the NumberAdder class\n//versatile and reusable for different types of\n//data.\n//__Users__joshuaying__emblem__semantic-graph__test-ts__src__sequence-generator.ts)28_0-32_1[Class][NumberAdder]\n///**\n// * Represents a class that can combine a list of numbers.\n// * Implements the\n//Combiner interface with a generic type of number.\n// * Provides a method to\n//combine a list of numbers using the reduce function.\n// * @param l - The list of\n//numbers to be combined.\n// * @returns The result of combining the list of\n//numbers.\n// */\n//ce-generator.ts__99_0-104_1[Class][NumberAdder]\n//The class NumberAdder is a type of Combiner that is used to add together a list\n//of numbers. It implements the Combiner interface and has a method called combine\n//that takes in an array of numbers and returns the sum of all the numbers in the\n//array. This class is useful for performing mathematical operations on a list of\n//numbers, such as finding the total or average. It is generic, meaning it can\n//work with any type of number, making it versatile and adaptable for different\n//use cases. The combine method uses the reduce function to iterate through the\n//array and add each number to the previous one, resulting in a single sum value.\n//This class is a helpful tool for simplifying and streamlining number\n//calculations in a program.\n//ce-generator.ts__158_0-164_1[Class][NumberAdder]\nclass NumberAdder implements Combiner<number> {\n// __Users__joshuaying__emblem__semantic-graph__test-ts__src__sequence-generator.ts)29_4-31_5[Method][combine]\n// ce-generator.ts__101_4-103_5[Method][combine]\n// ce-generator.ts__161_4-163_5[Method][combine]\n    combine(l: number[]): number {\n        return l.reduce((prev, curr) => prev + curr)\n    }\n}\n\n//\n//__Users__joshuaying__emblem__semantic-graph__test-ts__src__sequence-generator.ts)34_0-42_1[Class][ConcreteSequenceGenerator]\n//ce-generator.ts__108_0-118_1[Class][ConcreteSequenceGenerator]\n////The class ConcreteSequenceGenerator is a type of SequenceGenerator that is\n//used\n////to generate a sequence of numbers. It extends the SequenceGenerator class\n//and\n////specifies that the type of sequence it will generate is numbers. It has\n//a\n////constructor that takes in a generationLength parameter, which determines\n//the\n////length of the sequence that will be generated. It also calls the\n//constructor of\n////its parent class, passing in the number 2 as the windowSize and\n//a new instance\n////of the NumberAdder class as the combiner. This means that the\n//ConcreteSequenceGenerator\n////will use a window size of 2 and the NumberAdder\n//class to combine the numbers in\n////the sequence. The getStartingSequence method\n//is implemented to return an array\n////containing the numbers 0 and 1, which will\n//be used as the starting sequence for\n////the generation process. This class is\n//useful for creating custom sequences of\n////numbers, such as Fibonacci or prime\n//numbers, and can be easily extended and\n////adapted for different types of\n//sequences.\n//ce-generator.ts__169_0-181_1[Class][ConcreteSequenceGenerator]\nclass ConcreteSequenceGenerator extends SequenceGenerator<number> {\n// __Users__joshuaying__emblem__semantic-graph__test-ts__src__sequence-generator.ts)35_4-37_5[Method][constructor]\n// ce-generator.ts__110_4-112_5[Method][constructor]\n// ce-generator.ts__172_4-174_5[Method][constructor]\n    constructor(generationLength: number) {\n        super(2, generationLength, new NumberAdder());\n    }\n\n// __Users__joshuaying__emblem__semantic-graph__test-ts__src__sequence-generator.ts)39_4-41_5[Method][getStartingSequence]\n// ce-generator.ts__115_4-117_5[Method][getStartingSequence]\n// ce-generator.ts__178_4-180_5[Method][getStartingSequence]\n    getStartingSequence(): number[] {\n        return [0, 1];\n    }\n}\n\n////The ConcreteSequenceGenerator class extends the SequenceGenerator class\n//and\n////provides a concrete implementation of the getStartingSequence method. It\n//takes\n////in a generationLength parameter and uses it to initialize the\n//generationLength\n////property of the parent class. It also takes in a NumberAdder\n//instance as the\n////combiner, which is used to combine the elements in the\n//sequence. This class\n////demonstrates how the SequenceGenerator class can be\n//extended and customized\n////for specific use cases. The generateSequence method is\n//called in the main\n////function, which creates a new instance of the\n//ConcreteSequenceGenerator class\n////with a generationLength of 10 and calls the\n//generateSequence method to generate\n////a sequence of numbers. The result is then\n//logged to the console using the\n////console.log method. This shows how the\n//SequenceGenerator class can be used in\n////a practical\n//application.\n//__Users__joshuaying__emblem__semantic-graph__test-ts__src__sequence-generator.ts)44_0-46_1[Function][main]\n////The main function is the entry point of the program. It creates a new\n//instance\n////of the ConcreteSequenceGenerator class with a generationLength of 10.\n//It then\n////calls the generateSequence() method on this instance and logs the\n//result to the\n////console using the console.log() function. This will generate a\n//sequence of\n////numbers using the NumberAdder class as the combiner and print it\n//to the\n////console.\n//ce-generator.ts__145_0-147_1[Function][main]\n////The function main is the entry point of the program. It creates a new instance\n//of\n////the ConcreteSequenceGenerator class, passing in the number 10 as\n//the\n////generationLength parameter. It then calls the generateSequence method on\n//this\n////instance, which will generate a sequence of numbers using the specified\n//window\n////size and combiner. Finally, the console.log function is used to print\n//the\n////generated sequence to the console. This function is essential for running\n//the\n////program and allows for the customization and manipulation of the\n//generated\n////sequence. It is a crucial part of the program's functionality and\n//serves as a\n////starting point for further development and\n//expansion.\n//ce-generator.ts__220_0-222_1[Function][main]\nfunction main() {\n    console.log((new ConcreteSequenceGenerator(10)).generateSequence());\n}\n\nmain();",
        "scriptKindName": "TS",
        "projectRootPath": "/Users/joshuaying/emblem/semantic-graph/test-ts/src"
      }
    }
Info 10   [16:57:15.340] Starting updateGraphWorker: Project: /dev/null/inferredProject1*
Info 11   [16:57:15.542] Finishing updateGraphWorker: Project: /dev/null/inferredProject1* Version: 1 structureChanged: true structureIsReused:: Not Elapsed: 201.72645807266235ms
Info 12   [16:57:15.542] Project '/dev/null/inferredProject1*' (Inferred)
Info 13   [16:57:15.543] 	Files (8)
	/Users/joshuaying/emblem/semantic-graph/test-ts/node_modules/typescript/lib/lib.d.ts
	/Users/joshuaying/emblem/semantic-graph/test-ts/node_modules/typescript/lib/lib.es5.d.ts
	/Users/joshuaying/emblem/semantic-graph/test-ts/node_modules/typescript/lib/lib.dom.d.ts
	/Users/joshuaying/emblem/semantic-graph/test-ts/node_modules/typescript/lib/lib.webworker.importscripts.d.ts
	/Users/joshuaying/emblem/semantic-graph/test-ts/node_modules/typescript/lib/lib.scripthost.d.ts
	/Users/joshuaying/emblem/semantic-graph/test-ts/node_modules/typescript/lib/lib.decorators.d.ts
	/Users/joshuaying/emblem/semantic-graph/test-ts/node_modules/typescript/lib/lib.decorators.legacy.d.ts
	/Users/joshuaying/emblem/semantic-graph/test-ts/src/sequence-generator.ts


	../node_modules/typescript/lib/lib.d.ts
	  Default library for target 'es5'
	../node_modules/typescript/lib/lib.es5.d.ts
	  Library referenced via 'es5' from file '../node_modules/typescript/lib/lib.d.ts'
	../node_modules/typescript/lib/lib.dom.d.ts
	  Library referenced via 'dom' from file '../node_modules/typescript/lib/lib.d.ts'
	../node_modules/typescript/lib/lib.webworker.importscripts.d.ts
	  Library referenced via 'webworker.importscripts' from file '../node_modules/typescript/lib/lib.d.ts'
	../node_modules/typescript/lib/lib.scripthost.d.ts
	  Library referenced via 'scripthost' from file '../node_modules/typescript/lib/lib.d.ts'
	../node_modules/typescript/lib/lib.decorators.d.ts
	  Library referenced via 'decorators' from file '../node_modules/typescript/lib/lib.es5.d.ts'
	../node_modules/typescript/lib/lib.decorators.legacy.d.ts
	  Library referenced via 'decorators.legacy' from file '../node_modules/typescript/lib/lib.es5.d.ts'
	sequence-generator.ts
	  Root file specified for compilation

Info 14   [16:57:15.543] -----------------------------------------------
Info 15   [16:57:15.543] Project '/dev/null/inferredProject1*' (Inferred)
Info 15   [16:57:15.543] 	Files (8)

Info 15   [16:57:15.543] -----------------------------------------------
Info 15   [16:57:15.543] Open files: 
Info 15   [16:57:15.543] 	FileName: /Users/joshuaying/emblem/semantic-graph/test-ts/src/sequence-generator.ts ProjectRootPath: /Users/joshuaying/emblem/semantic-graph/test-ts/src
Info 15   [16:57:15.543] 		Projects: /dev/null/inferredProject1*
Perf 15   [16:57:15.543] 1::open: async elapsed time (in milliseconds) 204.8635
Info 16   [16:57:15.544] request:
    {
      "seq": 2,
      "type": "request",
      "command": "open",
      "arguments": {
        "file": "/Users/joshuaying/emblem/semantic-graph/test-ts/src/index.ts",
        "fileContent": "// // demonstrating why we need to bubble up from child to parent\n// type WrappedType = number | void;\n\n// type WrapperType = {\n//   a: string,\n//   b: WrappedType\n// }\n\n// function f() {\n//   const x: WrapperType = {\n//     a: 'hello',\n//     b: 5\n//   }\n\n//   console.log(x.b);\n// }\n\n// interface I {\n//   m(): string;\n// }\n\n// class C implements I {\n//   m() {\n//     return \"hello\";\n//   }\n// }\n\n\n\n/*\n// Tests for LSP idiosyncracy where subclass overriding / implementation methods are referencedBy the superclass method/field.\n// method1 should NOT referenceInDefinition B.method2 (only A.method2)\nabstract class A {\n  method1() {\n    this.method2()\n  }\n  abstract method2();\n}\n\nclass B extends A {\n  method2() {}\n}\n*/\n\n\n\n/*\n// Tests for bubbling children's referenceInDefinition up to parents.\n// A should referenceInDefinition B.\nfunction B() {}\n\nclass A {\n  m1() {\n    B()\n  }\n}\n*/\n\n// class A {\n//   b: B\n// }\n\n// class B {\n//   a: A\n//   constructor(a: A) {\n//     this.a = a;\n//     this.a.b = this;\n//   }\n// }\n\n// console.log(new B(new A()));",
        "scriptKindName": "TS",
        "projectRootPath": "/Users/joshuaying/emblem/semantic-graph/test-ts/src"
      }
    }
Info 17   [16:57:15.544] Starting updateGraphWorker: Project: /dev/null/inferredProject1*
Info 18   [16:57:15.546] Finishing updateGraphWorker: Project: /dev/null/inferredProject1* Version: 2 structureChanged: true structureIsReused:: Not Elapsed: 1.8680839538574219ms
Info 19   [16:57:15.546] Project '/dev/null/inferredProject1*' (Inferred)
Info 20   [16:57:15.546] 	Files (9)
	/Users/joshuaying/emblem/semantic-graph/test-ts/node_modules/typescript/lib/lib.d.ts
	/Users/joshuaying/emblem/semantic-graph/test-ts/node_modules/typescript/lib/lib.es5.d.ts
	/Users/joshuaying/emblem/semantic-graph/test-ts/node_modules/typescript/lib/lib.dom.d.ts
	/Users/joshuaying/emblem/semantic-graph/test-ts/node_modules/typescript/lib/lib.webworker.importscripts.d.ts
	/Users/joshuaying/emblem/semantic-graph/test-ts/node_modules/typescript/lib/lib.scripthost.d.ts
	/Users/joshuaying/emblem/semantic-graph/test-ts/node_modules/typescript/lib/lib.decorators.d.ts
	/Users/joshuaying/emblem/semantic-graph/test-ts/node_modules/typescript/lib/lib.decorators.legacy.d.ts
	/Users/joshuaying/emblem/semantic-graph/test-ts/src/sequence-generator.ts
	/Users/joshuaying/emblem/semantic-graph/test-ts/src/index.ts


	../node_modules/typescript/lib/lib.d.ts
	  Default library for target 'es5'
	../node_modules/typescript/lib/lib.es5.d.ts
	  Library referenced via 'es5' from file '../node_modules/typescript/lib/lib.d.ts'
	../node_modules/typescript/lib/lib.dom.d.ts
	  Library referenced via 'dom' from file '../node_modules/typescript/lib/lib.d.ts'
	../node_modules/typescript/lib/lib.webworker.importscripts.d.ts
	  Library referenced via 'webworker.importscripts' from file '../node_modules/typescript/lib/lib.d.ts'
	../node_modules/typescript/lib/lib.scripthost.d.ts
	  Library referenced via 'scripthost' from file '../node_modules/typescript/lib/lib.d.ts'
	../node_modules/typescript/lib/lib.decorators.d.ts
	  Library referenced via 'decorators' from file '../node_modules/typescript/lib/lib.es5.d.ts'
	../node_modules/typescript/lib/lib.decorators.legacy.d.ts
	  Library referenced via 'decorators.legacy' from file '../node_modules/typescript/lib/lib.es5.d.ts'
	sequence-generator.ts
	  Root file specified for compilation
	index.ts
	  Root file specified for compilation

Info 21   [16:57:15.546] -----------------------------------------------
Info 22   [16:57:15.546] Project '/dev/null/inferredProject1*' (Inferred)
Info 22   [16:57:15.546] 	Files (9)

Info 22   [16:57:15.546] -----------------------------------------------
Info 22   [16:57:15.546] Open files: 
Info 22   [16:57:15.546] 	FileName: /Users/joshuaying/emblem/semantic-graph/test-ts/src/sequence-generator.ts ProjectRootPath: /Users/joshuaying/emblem/semantic-graph/test-ts/src
Info 22   [16:57:15.546] 		Projects: /dev/null/inferredProject1*
Info 22   [16:57:15.546] 	FileName: /Users/joshuaying/emblem/semantic-graph/test-ts/src/index.ts ProjectRootPath: /Users/joshuaying/emblem/semantic-graph/test-ts/src
Info 22   [16:57:15.546] 		Projects: /dev/null/inferredProject1*
Perf 22   [16:57:15.546] 2::open: async elapsed time (in milliseconds) 2.4281
Info 23   [16:57:15.546] request:
    {
      "seq": 3,
      "type": "request",
      "command": "open",
      "arguments": {
        "file": "/Users/joshuaying/emblem/semantic-graph/test-ts/src/bfs-test.ts",
        "fileContent": "//\n//__Users__joshuaying__emblem__semantic-graph__test-ts__src__bfs-test.ts)0_0-11_1[Class][A]\n//st.ts__2_0-16_1[Class][A]\n//st.ts__3_0-20_1[Class][A]\nclass A {\n// __Users__joshuaying__emblem__semantic-graph__test-ts__src__bfs-test.ts)1_4-1_18[Property][aField]\n// st.ts__4_4-4_18[Property][aField]\n// st.ts__6_4-6_18[Property][aField]\n    aField: number\n// __Users__joshuaying__emblem__semantic-graph__test-ts__src__bfs-test.ts)2_4-4_5[Method][constructor]\n// st.ts__6_4-8_5[Method][constructor]\n// st.ts__9_4-11_5[Method][constructor]\n    constructor() {\n        this.aField = 3\n    }\n// __Users__joshuaying__emblem__semantic-graph__test-ts__src__bfs-test.ts)5_4-10_5[Method][M]\n// st.ts__10_4-15_5[Method][M]\n// st.ts__14_4-19_5[Method][M]\n    M() {\n        const b = new B();\n        b.C();\n        b.bField2;\n        this.aField;\n    }\n}\n\n//Class B is a blueprint for creating objects that have three fields: bField,\n//bField2, and bField3. These fields are all of type number. The constructor\n//function initializes the values of bField and bField2 to 4 and 6, respectively.\n//The C method allows access to the value of bField, while the D method does not\n//have any\n//functionality.\n//__Users__joshuaying__emblem__semantic-graph__test-ts__src__bfs-test.ts)13_0-29_1[Class][B]\n//Class B is a blueprint for creating objects that have three fields: bField,\n//bField2, and bField3. These fields are all of type number. The constructor\n//function initializes the values of bField and bField2 to 4 and 6, respectively.\n//The C method allows access to the value of bField, while the D method does not\n//have any functionality. This class can be used to create objects with specific\n//numerical properties and methods.\n//st.ts__25_0-47_1[Class][B]\n//Class B is a blueprint for creating objects that contain various fields and\n//methods. It has three fields, bField, bField2, and bField3, all of which are of\n//type number. The constructor function initializes the values of bField and\n//bField2 to 4 and 6, respectively. The C method allows access to the bField\n//field, while the D method does not have any functionality. This class can be\n//used to create objects with specific properties and\n//behaviors.\n//st.ts__36_0-64_1[Class][B]\nclass B {\n// __Users__joshuaying__emblem__semantic-graph__test-ts__src__bfs-test.ts)14_4-14_18[Property][bField]\n// st.ts__27_4-27_18[Property][bField]\n// st.ts__39_4-39_18[Property][bField]\n    bField: number\n// __Users__joshuaying__emblem__semantic-graph__test-ts__src__bfs-test.ts)15_4-15_19[Property][bField2]\n// st.ts__29_4-29_19[Property][bField2]\n// st.ts__42_4-42_19[Property][bField2]\n    bField2: number\n// __Users__joshuaying__emblem__semantic-graph__test-ts__src__bfs-test.ts)16_4-16_19[Property][bField3]\n// st.ts__31_4-31_19[Property][bField3]\n// st.ts__45_4-45_19[Property][bField3]\n    bField3: number\n// __Users__joshuaying__emblem__semantic-graph__test-ts__src__bfs-test.ts)17_4-20_5[Method][constructor]\n// st.ts__33_4-36_5[Method][constructor]\n// st.ts__48_4-51_5[Method][constructor]\n    constructor() {\n        this.bField = 4;\n        this.bField2 = 6;\n    }\n\n// __Users__joshuaying__emblem__semantic-graph__test-ts__src__bfs-test.ts)22_4-24_5[Method][C]\n// st.ts__39_4-41_5[Method][C]\n// st.ts__55_4-57_5[Method][C]\n    C() {\n        this.bField;\n    }\n\n// __Users__joshuaying__emblem__semantic-graph__test-ts__src__bfs-test.ts)26_4-28_5[Method][D]\n// st.ts__44_4-46_5[Method][D]\n// st.ts__61_4-63_5[Method][D]\n    D() {\n\n    }\n}",
        "scriptKindName": "TS",
        "projectRootPath": "/Users/joshuaying/emblem/semantic-graph/test-ts/src"
      }
    }
Info 24   [16:57:15.546] Starting updateGraphWorker: Project: /dev/null/inferredProject1*
Info 25   [16:57:15.548] Finishing updateGraphWorker: Project: /dev/null/inferredProject1* Version: 3 structureChanged: true structureIsReused:: Not Elapsed: 1.9893746376037598ms
Info 26   [16:57:15.548] Project '/dev/null/inferredProject1*' (Inferred)
Info 27   [16:57:15.548] 	Files (10)
	/Users/joshuaying/emblem/semantic-graph/test-ts/node_modules/typescript/lib/lib.d.ts
	/Users/joshuaying/emblem/semantic-graph/test-ts/node_modules/typescript/lib/lib.es5.d.ts
	/Users/joshuaying/emblem/semantic-graph/test-ts/node_modules/typescript/lib/lib.dom.d.ts
	/Users/joshuaying/emblem/semantic-graph/test-ts/node_modules/typescript/lib/lib.webworker.importscripts.d.ts
	/Users/joshuaying/emblem/semantic-graph/test-ts/node_modules/typescript/lib/lib.scripthost.d.ts
	/Users/joshuaying/emblem/semantic-graph/test-ts/node_modules/typescript/lib/lib.decorators.d.ts
	/Users/joshuaying/emblem/semantic-graph/test-ts/node_modules/typescript/lib/lib.decorators.legacy.d.ts
	/Users/joshuaying/emblem/semantic-graph/test-ts/src/sequence-generator.ts
	/Users/joshuaying/emblem/semantic-graph/test-ts/src/index.ts
	/Users/joshuaying/emblem/semantic-graph/test-ts/src/bfs-test.ts


	../node_modules/typescript/lib/lib.d.ts
	  Default library for target 'es5'
	../node_modules/typescript/lib/lib.es5.d.ts
	  Library referenced via 'es5' from file '../node_modules/typescript/lib/lib.d.ts'
	../node_modules/typescript/lib/lib.dom.d.ts
	  Library referenced via 'dom' from file '../node_modules/typescript/lib/lib.d.ts'
	../node_modules/typescript/lib/lib.webworker.importscripts.d.ts
	  Library referenced via 'webworker.importscripts' from file '../node_modules/typescript/lib/lib.d.ts'
	../node_modules/typescript/lib/lib.scripthost.d.ts
	  Library referenced via 'scripthost' from file '../node_modules/typescript/lib/lib.d.ts'
	../node_modules/typescript/lib/lib.decorators.d.ts
	  Library referenced via 'decorators' from file '../node_modules/typescript/lib/lib.es5.d.ts'
	../node_modules/typescript/lib/lib.decorators.legacy.d.ts
	  Library referenced via 'decorators.legacy' from file '../node_modules/typescript/lib/lib.es5.d.ts'
	sequence-generator.ts
	  Root file specified for compilation
	index.ts
	  Root file specified for compilation
	bfs-test.ts
	  Root file specified for compilation

Info 28   [16:57:15.548] -----------------------------------------------
Info 29   [16:57:15.548] Project '/dev/null/inferredProject1*' (Inferred)
Info 29   [16:57:15.548] 	Files (10)

Info 29   [16:57:15.548] -----------------------------------------------
Info 29   [16:57:15.548] Open files: 
Info 29   [16:57:15.548] 	FileName: /Users/joshuaying/emblem/semantic-graph/test-ts/src/sequence-generator.ts ProjectRootPath: /Users/joshuaying/emblem/semantic-graph/test-ts/src
Info 29   [16:57:15.548] 		Projects: /dev/null/inferredProject1*
Info 29   [16:57:15.548] 	FileName: /Users/joshuaying/emblem/semantic-graph/test-ts/src/index.ts ProjectRootPath: /Users/joshuaying/emblem/semantic-graph/test-ts/src
Info 29   [16:57:15.548] 		Projects: /dev/null/inferredProject1*
Info 29   [16:57:15.548] 	FileName: /Users/joshuaying/emblem/semantic-graph/test-ts/src/bfs-test.ts ProjectRootPath: /Users/joshuaying/emblem/semantic-graph/test-ts/src
Info 29   [16:57:15.548] 		Projects: /dev/null/inferredProject1*
Perf 29   [16:57:15.548] 3::open: async elapsed time (in milliseconds) 2.4525
Info 30   [16:57:15.548] request:
    {
      "seq": 4,
      "type": "request",
      "command": "navtree",
      "arguments": {
        "file": "/Users/joshuaying/emblem/semantic-graph/test-ts/src/sequence-generator.ts"
      }
    }
Perf 31   [16:57:15.559] 4::navtree: elapsed time (in milliseconds) 10.7114
Info 32   [16:57:15.559] response:
    {"seq":0,"type":"response","command":"navtree","request_seq":4,"success":true,"body":{"text":"<global>","kind":"script","kindModifiers":"","spans":[{"start":{"line":1,"offset":1},"end":{"line":294,"offset":8}}],"childItems":[{"text":"Combiner","kind":"interface","kindModifiers":"","spans":[{"start":{"line":138,"offset":1},"end":{"line":143,"offset":2}}],"nameSpan":{"start":{"line":138,"offset":11},"end":{"line":138,"offset":19}},"childItems":[{"text":"combine","kind":"method","kindModifiers":"","spans":[{"start":{"line":142,"offset":5},"end":{"line":142,"offset":23}}],"nameSpan":{"start":{"line":142,"offset":5},"end":{"line":142,"offset":12}}}]},{"text":"ConcreteSequenceGenerator","kind":"class","kindModifiers":"","spans":[{"start":{"line":218,"offset":1},"end":{"line":232,"offset":2}}],"nameSpan":{"start":{"line":218,"offset":7},"end":{"line":218,"offset":32}},"childItems":[{"text":"constructor","kind":"constructor","kindModifiers":"","spans":[{"start":{"line":222,"offset":5},"end":{"line":224,"offset":6}}]},{"text":"getStartingSequence","kind":"method","kindModifiers":"","spans":[{"start":{"line":229,"offset":5},"end":{"line":231,"offset":6}}],"nameSpan":{"start":{"line":229,"offset":5},"end":{"line":229,"offset":24}}}]},{"text":"main","kind":"function","kindModifiers":"","spans":[{"start":{"line":290,"offset":1},"end":{"line":292,"offset":2}}],"nameSpan":{"start":{"line":290,"offset":10},"end":{"line":290,"offset":14}}},{"text":"NumberAdder","kind":"class","kindModifiers":"","spans":[{"start":{"line":179,"offset":1},"end":{"line":186,"offset":2}}],"nameSpan":{"start":{"line":179,"offset":7},"end":{"line":179,"offset":18}},"childItems":[{"text":"combine","kind":"method","kindModifiers":"","spans":[{"start":{"line":183,"offset":5},"end":{"line":185,"offset":6}}],"nameSpan":{"start":{"line":183,"offset":5},"end":{"line":183,"offset":12}},"childItems":[{"text":"l.reduce() callback","kind":"function","kindModifiers":"","spans":[{"start":{"line":184,"offset":25},"end":{"line":184,"offset":52}}]}]}]},{"text":"SequenceGenerator","kind":"class","kindModifiers":"abstract","spans":[{"start":{"line":92,"offset":1},"end":{"line":131,"offset":2}}],"nameSpan":{"start":{"line":92,"offset":16},"end":{"line":92,"offset":33}},"childItems":[{"text":"constructor","kind":"constructor","kindModifiers":"","spans":[{"start":{"line":109,"offset":5},"end":{"line":113,"offset":6}}]},{"text":"combiner","kind":"property","kindModifiers":"","spans":[{"start":{"line":96,"offset":5},"end":{"line":96,"offset":27}}],"nameSpan":{"start":{"line":96,"offset":5},"end":{"line":96,"offset":13}}},{"text":"generateSequence","kind":"method","kindModifiers":"","spans":[{"start":{"line":118,"offset":5},"end":{"line":125,"offset":6}}],"nameSpan":{"start":{"line":118,"offset":5},"end":{"line":118,"offset":21}},"childItems":[{"text":"i","kind":"var","kindModifiers":"","spans":[{"start":{"line":120,"offset":18},"end":{"line":120,"offset":23}}],"nameSpan":{"start":{"line":120,"offset":18},"end":{"line":120,"offset":19}}},{"text":"latest_window","kind":"const","kindModifiers":"","spans":[{"start":{"line":121,"offset":19},"end":{"line":121,"offset":84}}],"nameSpan":{"start":{"line":121,"offset":19},"end":{"line":121,"offset":32}}},{"text":"sequence","kind":"var","kindModifiers":"","spans":[{"start":{"line":119,"offset":13},"end":{"line":119,"offset":50}}],"nameSpan":{"start":{"line":119,"offset":13},"end":{"line":119,"offset":21}}}]},{"text":"generationLength","kind":"property","kindModifiers":"","spans":[{"start":{"line":104,"offset":5},"end":{"line":104,"offset":30}}],"nameSpan":{"start":{"line":104,"offset":5},"end":{"line":104,"offset":21}}},{"text":"getStartingSequence","kind":"method","kindModifiers":"abstract","spans":[{"start":{"line":130,"offset":5},"end":{"line":130,"offset":41}}],"nameSpan":{"start":{"line":130,"offset":14},"end":{"line":130,"offset":33}}},{"text":"windowSize","kind":"property","kindModifiers":"","spans":[{"start":{"line":100,"offset":5},"end":{"line":100,"offset":24}}],"nameSpan":{"start":{"line":100,"offset":5},"end":{"line":100,"offset":15}}}]}]}}
Info 33   [16:57:15.563] request:
    {
      "seq": 5,
      "type": "request",
      "command": "navtree",
      "arguments": {
        "file": "/Users/joshuaying/emblem/semantic-graph/test-ts/src/index.ts"
      }
    }
Perf 34   [16:57:15.564] 5::navtree: elapsed time (in milliseconds) 0.2742
Info 35   [16:57:15.564] response:
    {"seq":0,"type":"response","command":"navtree","request_seq":5,"success":true,"body":{"text":"<global>","kind":"script","kindModifiers":"","spans":[{"start":{"line":1,"offset":1},"end":{"line":71,"offset":32}}]}}
Info 36   [16:57:15.565] request:
    {
      "seq": 6,
      "type": "request",
      "command": "navtree",
      "arguments": {
        "file": "/Users/joshuaying/emblem/semantic-graph/test-ts/src/bfs-test.ts"
      }
    }
Perf 37   [16:57:15.565] 6::navtree: elapsed time (in milliseconds) 0.7072
Info 38   [16:57:15.565] response:
    {"seq":0,"type":"response","command":"navtree","request_seq":6,"success":true,"body":{"text":"<global>","kind":"script","kindModifiers":"","spans":[{"start":{"line":1,"offset":1},"end":{"line":83,"offset":2}}],"childItems":[{"text":"A","kind":"class","kindModifiers":"","spans":[{"start":{"line":5,"offset":1},"end":{"line":25,"offset":2}}],"nameSpan":{"start":{"line":5,"offset":7},"end":{"line":5,"offset":8}},"childItems":[{"text":"constructor","kind":"constructor","kindModifiers":"","spans":[{"start":{"line":13,"offset":5},"end":{"line":15,"offset":6}}]},{"text":"aField","kind":"property","kindModifiers":"","spans":[{"start":{"line":9,"offset":5},"end":{"line":9,"offset":19}}],"nameSpan":{"start":{"line":9,"offset":5},"end":{"line":9,"offset":11}}},{"text":"M","kind":"method","kindModifiers":"","spans":[{"start":{"line":19,"offset":5},"end":{"line":24,"offset":6}}],"nameSpan":{"start":{"line":19,"offset":5},"end":{"line":19,"offset":6}},"childItems":[{"text":"b","kind":"const","kindModifiers":"","spans":[{"start":{"line":20,"offset":15},"end":{"line":20,"offset":26}}],"nameSpan":{"start":{"line":20,"offset":15},"end":{"line":20,"offset":16}}}]}]},{"text":"B","kind":"class","kindModifiers":"","spans":[{"start":{"line":49,"offset":1},"end":{"line":83,"offset":2}}],"nameSpan":{"start":{"line":49,"offset":7},"end":{"line":49,"offset":8}},"childItems":[{"text":"constructor","kind":"constructor","kindModifiers":"","spans":[{"start":{"line":65,"offset":5},"end":{"line":68,"offset":6}}]},{"text":"bField","kind":"property","kindModifiers":"","spans":[{"start":{"line":53,"offset":5},"end":{"line":53,"offset":19}}],"nameSpan":{"start":{"line":53,"offset":5},"end":{"line":53,"offset":11}}},{"text":"bField2","kind":"property","kindModifiers":"","spans":[{"start":{"line":57,"offset":5},"end":{"line":57,"offset":20}}],"nameSpan":{"start":{"line":57,"offset":5},"end":{"line":57,"offset":12}}},{"text":"bField3","kind":"property","kindModifiers":"","spans":[{"start":{"line":61,"offset":5},"end":{"line":61,"offset":20}}],"nameSpan":{"start":{"line":61,"offset":5},"end":{"line":61,"offset":12}}},{"text":"C","kind":"method","kindModifiers":"","spans":[{"start":{"line":73,"offset":5},"end":{"line":75,"offset":6}}],"nameSpan":{"start":{"line":73,"offset":5},"end":{"line":73,"offset":6}}},{"text":"D","kind":"method","kindModifiers":"","spans":[{"start":{"line":80,"offset":5},"end":{"line":82,"offset":6}}],"nameSpan":{"start":{"line":80,"offset":5},"end":{"line":80,"offset":6}}}]}]}}
Info 39   [16:57:15.567] request:
    {
      "seq": 7,
      "type": "request",
      "command": "references",
      "arguments": {
        "file": "/Users/joshuaying/emblem/semantic-graph/test-ts/src/sequence-generator.ts",
        "line": 92,
        "offset": 1
      }
    }
Info 40   [16:57:15.568] Finding references to /Users/joshuaying/emblem/semantic-graph/test-ts/src/sequence-generator.ts position 4216 in project /dev/null/inferredProject1*
Perf 41   [16:57:15.589] 7::references: elapsed time (in milliseconds) 22.0058
Info 42   [16:57:15.589] response:
    {"seq":0,"type":"response","command":"references","request_seq":7,"success":true,"body":{"refs":[{"file":"/Users/joshuaying/emblem/semantic-graph/test-ts/src/sequence-generator.ts","start":{"line":92,"offset":16},"end":{"line":92,"offset":33},"contextStart":{"line":92,"offset":1},"contextEnd":{"line":131,"offset":2},"isWriteAccess":true,"isDefinition":true},{"file":"/Users/joshuaying/emblem/semantic-graph/test-ts/src/sequence-generator.ts","start":{"line":218,"offset":41},"end":{"line":218,"offset":58},"isWriteAccess":false,"isDefinition":false}],"symbolName":"","symbolStartOffset":0,"symbolDisplayString":""}}
Info 43   [16:57:15.592] request:
    {
      "seq": 8,
      "type": "request",
      "command": "references",
      "arguments": {
        "file": "/Users/joshuaying/emblem/semantic-graph/test-ts/src/sequence-generator.ts",
        "line": 96,
        "offset": 5
      }
    }
Info 44   [16:57:15.593] Finding references to /Users/joshuaying/emblem/semantic-graph/test-ts/src/sequence-generator.ts position 4473 in project /dev/null/inferredProject1*
Perf 45   [16:57:15.600] 8::references: elapsed time (in milliseconds) 7.5284
Info 46   [16:57:15.600] response:
    {"seq":0,"type":"response","command":"references","request_seq":8,"success":true,"body":{"refs":[{"file":"/Users/joshuaying/emblem/semantic-graph/test-ts/src/sequence-generator.ts","start":{"line":96,"offset":5},"end":{"line":96,"offset":13},"contextStart":{"line":96,"offset":5},"contextEnd":{"line":96,"offset":27},"isWriteAccess":false,"isDefinition":true},{"file":"/Users/joshuaying/emblem/semantic-graph/test-ts/src/sequence-generator.ts","start":{"line":112,"offset":14},"end":{"line":112,"offset":22},"isWriteAccess":true,"isDefinition":false},{"file":"/Users/joshuaying/emblem/semantic-graph/test-ts/src/sequence-generator.ts","start":{"line":122,"offset":32},"end":{"line":122,"offset":40},"isWriteAccess":false,"isDefinition":false}],"symbolName":"combiner","symbolStartOffset":5,"symbolDisplayString":"(property) SequenceGenerator<T>.combiner: Combiner<T>"}}
Info 47   [16:57:15.601] request:
    {
      "seq": 9,
      "type": "request",
      "command": "references",
      "arguments": {
        "file": "/Users/joshuaying/emblem/semantic-graph/test-ts/src/sequence-generator.ts",
        "line": 100,
        "offset": 5
      }
    }
Info 48   [16:57:15.602] Finding references to /Users/joshuaying/emblem/semantic-graph/test-ts/src/sequence-generator.ts position 4721 in project /dev/null/inferredProject1*
Perf 49   [16:57:15.603] 9::references: elapsed time (in milliseconds) 2.0660
Info 50   [16:57:15.603] response:
    {"seq":0,"type":"response","command":"references","request_seq":9,"success":true,"body":{"refs":[{"file":"/Users/joshuaying/emblem/semantic-graph/test-ts/src/sequence-generator.ts","start":{"line":100,"offset":5},"end":{"line":100,"offset":15},"contextStart":{"line":100,"offset":5},"contextEnd":{"line":100,"offset":24},"isWriteAccess":false,"isDefinition":true},{"file":"/Users/joshuaying/emblem/semantic-graph/test-ts/src/sequence-generator.ts","start":{"line":110,"offset":14},"end":{"line":110,"offset":24},"isWriteAccess":true,"isDefinition":false},{"file":"/Users/joshuaying/emblem/semantic-graph/test-ts/src/sequence-generator.ts","start":{"line":121,"offset":73},"end":{"line":121,"offset":83},"isWriteAccess":false,"isDefinition":false}],"symbolName":"windowSize","symbolStartOffset":5,"symbolDisplayString":"(property) SequenceGenerator<T>.windowSize: number"}}
Info 51   [16:57:15.604] request:
    {
      "seq": 10,
      "type": "request",
      "command": "references",
      "arguments": {
        "file": "/Users/joshuaying/emblem/semantic-graph/test-ts/src/sequence-generator.ts",
        "line": 104,
        "offset": 5
      }
    }
Info 52   [16:57:15.604] Finding references to /Users/joshuaying/emblem/semantic-graph/test-ts/src/sequence-generator.ts position 4984 in project /dev/null/inferredProject1*
Perf 53   [16:57:15.606] 10::references: elapsed time (in milliseconds) 1.9047
Info 54   [16:57:15.606] response:
    {"seq":0,"type":"response","command":"references","request_seq":10,"success":true,"body":{"refs":[{"file":"/Users/joshuaying/emblem/semantic-graph/test-ts/src/sequence-generator.ts","start":{"line":104,"offset":5},"end":{"line":104,"offset":21},"contextStart":{"line":104,"offset":5},"contextEnd":{"line":104,"offset":30},"isWriteAccess":false,"isDefinition":true},{"file":"/Users/joshuaying/emblem/semantic-graph/test-ts/src/sequence-generator.ts","start":{"line":111,"offset":14},"end":{"line":111,"offset":30},"isWriteAccess":true,"isDefinition":false},{"file":"/Users/joshuaying/emblem/semantic-graph/test-ts/src/sequence-generator.ts","start":{"line":120,"offset":34},"end":{"line":120,"offset":50},"isWriteAccess":false,"isDefinition":false}],"symbolName":"generationLength","symbolStartOffset":5,"symbolDisplayString":"(property) SequenceGenerator<T>.generationLength: number"}}
Info 55   [16:57:15.607] request:
    {
      "seq": 11,
      "type": "request",
      "command": "references",
      "arguments": {
        "file": "/Users/joshuaying/emblem/semantic-graph/test-ts/src/sequence-generator.ts",
        "line": 109,
        "offset": 5
      }
    }
Info 56   [16:57:15.607] Finding references to /Users/joshuaying/emblem/semantic-graph/test-ts/src/sequence-generator.ts position 5232 in project /dev/null/inferredProject1*
Perf 57   [16:57:15.611] 11::references: elapsed time (in milliseconds) 3.7155
Info 58   [16:57:15.611] response:
    {"seq":0,"type":"response","command":"references","request_seq":11,"success":true,"body":{"refs":[{"file":"/Users/joshuaying/emblem/semantic-graph/test-ts/src/sequence-generator.ts","start":{"line":109,"offset":5},"end":{"line":109,"offset":16},"contextStart":{"line":109,"offset":5},"contextEnd":{"line":113,"offset":6},"isWriteAccess":false,"isDefinition":true},{"file":"/Users/joshuaying/emblem/semantic-graph/test-ts/src/sequence-generator.ts","start":{"line":223,"offset":9},"end":{"line":223,"offset":14},"isWriteAccess":false,"isDefinition":false}],"symbolName":"constructor","symbolStartOffset":5,"symbolDisplayString":"constructor SequenceGenerator<T>(windowSize: number, generationLength: number, combiner: Combiner<T>): SequenceGenerator<T>"}}
