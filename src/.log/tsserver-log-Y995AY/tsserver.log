Info 0    [17:46:28.630] Starting TS Server
Info 1    [17:46:28.631] Version: 5.2.2
Info 2    [17:46:28.631] Arguments: /usr/local/bin/node /Users/joshuaying/emblem/semantic-graph/test-ts/node_modules/typescript/lib/tsserver.js --serverMode partialSemantic --useInferredProjectPerProjectRoot --disableAutomaticTypingAcquisition --cancellationPipeName /private/var/folders/1k/1hld73x1599dxmy2mtdx1jg00000gn/T/3a1121b82aa783606a5950f986a267a0/tscancellation* --logVerbosity verbose --logFile /Users/joshuaying/emblem/semantic-graph/test-ts/src/.log/tsserver-log-Y995AY/tsserver.log --locale en --validateDefaultNpmLocation --useNodeIpc
Info 3    [17:46:28.632] Platform: darwin NodeVersion: v19.6.0 CaseSensitive: false
Info 4    [17:46:28.632] ServerMode: 1 hasUnknownServerMode: undefined
Info 5    [17:46:28.635] request:
    {
      "seq": 0,
      "type": "request",
      "command": "configure",
      "arguments": {
        "formatOptions": {
          "newLineCharacter": "\n"
        },
        "preferences": {
          "allowIncompleteCompletions": true,
          "allowRenameOfImportPath": true,
          "allowTextChangesInNewFiles": true,
          "disableLineTextInReferences": true,
          "disableSuggestions": false,
          "displayPartsForJSDoc": true,
          "generateReturnInDocTemplate": true,
          "importModuleSpecifierEnding": "auto",
          "importModuleSpecifierPreference": "shortest",
          "includeAutomaticOptionalChainCompletions": true,
          "includeCompletionsForImportStatements": true,
          "includeCompletionsForModuleExports": true,
          "includeCompletionsWithClassMemberSnippets": true,
          "includeCompletionsWithInsertText": true,
          "includeCompletionsWithObjectLiteralMethodSnippets": true,
          "includeCompletionsWithSnippetText": true,
          "includeInlayEnumMemberValueHints": false,
          "includeInlayFunctionLikeReturnTypeHints": false,
          "includeInlayFunctionParameterTypeHints": false,
          "includeInlayParameterNameHints": "none",
          "includeInlayParameterNameHintsWhenArgumentMatchesName": false,
          "includeInlayPropertyDeclarationTypeHints": false,
          "includeInlayVariableTypeHints": false,
          "includeInlayVariableTypeHintsWhenTypeMatchesName": false,
          "includePackageJsonAutoImports": "auto",
          "jsxAttributeCompletionStyle": "auto",
          "lazyConfiguredProjectsFromExternalProject": false,
          "organizeImportsAccentCollation": true,
          "organizeImportsCaseFirst": false,
          "organizeImportsCollation": "ordinal",
          "organizeImportsCollationLocale": "en",
          "organizeImportsIgnoreCase": "auto",
          "organizeImportsNumericCollation": false,
          "providePrefixAndSuffixTextForRename": true,
          "provideRefactorNotApplicableReason": true,
          "quotePreference": "auto"
        }
      }
    }
Info 6    [17:46:28.636] Format host information updated
Info 7    [17:46:28.636] response:
    {"seq":0,"type":"response","command":"configure","request_seq":0,"success":true}
Perf 8    [17:46:28.636] 0::configure: async elapsed time (in milliseconds) 0.4615
Info 9    [17:46:28.637] request:
    {
      "seq": 1,
      "type": "request",
      "command": "open",
      "arguments": {
        "file": "/Users/joshuaying/emblem/semantic-graph/test-ts/src/sequence-generator.ts",
        "fileContent": "////The SequenceGenerator class is an abstract class that allows for the creation\n//of\n////sequences of any type. It has a generic type parameter T, which allows for\n//the\n////generation of sequences of any type. The class has three properties:\n//combiner,\n////windowSize, and generationLength. The combiner property is of type\n//Combiner<T>,\n////which is an interface that defines a method for combining\n//elements of type T.\n////The windowSize property is a number that determines the\n//size of the window used\n////for combining elements in the sequence. The\n//generationLength property is also a\n////number that determines the length of the\n//sequence to be generated.\n//\n////The constructor of the SequenceGenerator class\n//takes in three parameters:\n////windowSize, generationLength, and combiner. These\n//parameters are used to\n////initialize the corresponding properties of the class.\n//The constructor ensures\n////that the properties are properly set before the\n//sequence generation process\n////begins.\n//\n////The generateSequence method is\n//responsible for generating the sequence. It uses\n////the getStartingSequence\n//method, which is an abstract method that must be\n////implemented by any class that\n//extends the SequenceGenerator class. This method\n////returns the starting sequence\n//for the generation process. The generateSequence\n////method then uses a for loop\n//to iterate through the generationLength and\n////generate the sequence by combining\n//the latest window of elements using the\n////combiner's combine method. The final\n//sequence is then returned.\n//\n////Overall, the SequenceGenerator class provides a\n//flexible and customizable way\n////to generate sequences of any type by allowing\n//for the use of different types of\n////combiners and window sizes. It also promotes\n//code reusability by using the\n////generic type parameter and abstract\n//methods.\n//ce-generator.ts__0_0-21_1[Class][SequenceGenerator]\n///**\n// * Represents a class that generates a sequence of values using a specified\n//combiner.\n// * @template T - Specifies the type of values that will be generated.\n//\n//*/\n//abstract class SequenceGenerator<T> {\n//\n//\t/**\n//\t * The combiner used to generate\n//the sequence.\n//\t */\n//\tcombiner: Combiner<T>;\n//\n//\t/**\n//\t * The size of the window used\n//for generating the sequence.\n//\t */\n//\twindowSize: number;\n//\n//\t/**\n//\t * The length of\n//the sequence to be generated.\n//\t */\n//\tgenerationLength: number;\n//\n//\t/**\n//\t * Creates\n//a new SequenceGenerator with the specified window size, generation length, and\n//combiner.\n//\t * @param windowSize - The size of the window used for generating the\n//sequence.\n//\t * @param generationLength - The length of the sequence to be\n//generated.\n//\t * @param combiner - The combiner used to generate the sequence.\n//\t\n//*/\n//\tconstructor(windowSize: number, generationLength: number, combiner:\n//Combiner<T>) {\n//\t\tthis.windowSize = windowSize;\n//\t\tthis.generationLength =\n//generationLength;\n//\t\tthis.combiner = combiner;\n//\t}\n//\n//\t/**\n//\t * Generates a sequence\n//of values using the specified combiner, window size, and generation length.\n//\t *\n//@returns The generated sequence of values.\n//\t */\n//\tgenerateSequence(): T[] {\n//\t\t//\n//Gets the starting sequence using the abstract method.\n//\t\tvar sequence =\n//this.getStartingSequence();\n//\n//\t\t// Generates the remaining values in the sequence\n//using the specified combiner, window size, and generation length.\n//\t\tfor (var i =\n//0; i < this.generationLength; i++) {\n//\t\t\t// Gets the latest window of values from\n//the sequence.\n//\t\t\tconst latest_window = sequence.slice(sequence.length -\n//this.windowSize);\n//\n//\t\t\t// Combines the latest window of values using the\n//specified combiner and adds the result to the\n//sequence.\n//\t\t\tsequence.push(this.combiner.combine(latest_window));\n//\t\t}\n//\n//\t\t//\n//Returns the generated sequence.\n//\t\treturn sequence;\n//\t}\n//\n//\t/**\n//\t * Gets the\n//starting sequence of values for the generator.\n//\t * @returns The starting\n//sequence of values.\n//\t */\n//\tabstract getStartingSequence(): T[];\n//}\n//\n///**\n// *\n//Represents an interface for combining a list of values.\n// * @template T -\n//Specifies the type of values that can be combined.\n// */\n//interface Combiner<T>\n//{\n//\n//\t/**\n//\t * Combines a list of values using a specified method.\n//\t * @param l -\n//The list of values to be combined.\n//\t * @returns The result of combining the\n//values.\n//\t */\n//\tcombine(l: T[]): T;\n//}\n//\n///**\n// * Represents a class that can combine\n//a list of numbers.\n// * @implements Combiner<number> - This class implements the\n//Combiner interface, specifying that it works with numbers.\n// */\n//class NumberAdder\n//implements Combiner<number> {\n//\n//\t/**\n//\t * Combines a list of numbers by adding\n//them together.\n//\t * @param l - The list of numbers to be combined.\n//\t * @returns\n//The result of adding all the numbers in the list together.\n//\t */\n//\tcombine(l:\n//number[]): number {\n//\t\t// Uses the reduce method to add all the numbers in the\n//list together.\n//\t\treturn l.reduce((prev, curr) => prev +\n//curr);\n//\t}\n//}\n//ce-generator.ts__51_0-78_1[Class][SequenceGenerator]\nabstract class SequenceGenerator<T> {\n// ce-generator.ts__1_4-1_26[Property][combiner]\n// ce-generator.ts__53_4-53_26[Property][combiner]\n    combiner: Combiner<T>;\n// ce-generator.ts__2_4-2_23[Property][windowSize]\n// ce-generator.ts__55_4-55_23[Property][windowSize]\n    windowSize: number;\n// ce-generator.ts__3_4-3_29[Property][generationLength]\n// ce-generator.ts__57_4-57_29[Property][generationLength]\n    generationLength: number;\n\n// ce-generator.ts__5_4-9_5[Method][constructor]\n// ce-generator.ts__60_4-64_5[Method][constructor]\n    constructor(windowSize: number, generationLength: number, combiner: Combiner<T>) {\n        this.windowSize = windowSize;\n        this.generationLength = generationLength;\n        this.combiner = combiner;\n    }\n\n// ce-generator.ts__11_4-18_5[Method][generateSequence]\n// ce-generator.ts__67_4-74_5[Method][generateSequence]\n    generateSequence(): T[] {\n        var sequence = this.getStartingSequence();\n        for (var i = 0; i < this.generationLength; i++) {\n            const latest_window = sequence.slice(sequence.length - this.windowSize);\n            sequence.push(this.combiner.combine(latest_window))\n        }\n        return sequence;\n    }\n\n// ce-generator.ts__20_4-20_40[Method][getStartingSequence]\n// ce-generator.ts__77_4-77_40[Method][getStartingSequence]\n    abstract getStartingSequence(): T[];\n}\n\n\n//ce-generator.ts__24_0-26_1[Interface][Combiner]\n//ce-generator.ts__82_0-85_1[Interface][Combiner]\ninterface Combiner<T> {\n// ce-generator.ts__25_4-25_22[Method][combine]\n// ce-generator.ts__84_4-84_22[Method][combine]\n    combine(l: T[]): T\n}\n\n//The class NumberAdder is a type of Combiner that specifically works with\n//numbers. It has a method called combine that takes in an array of numbers and\n//returns a single number that is the sum of all the numbers in the array. This is\n//achieved by using the reduce method on the array, which iterates through each\n//element and adds it to the previous element until a single value is returned.\n//The class implements the Combiner interface, which allows it to work with any\n//type of data as long as it has a combine method that takes in an array of that\n//type and returns a single value of that type. This makes the NumberAdder class\n//versatile and reusable for different types of\n//data.\n//ce-generator.ts__28_0-32_1[Class][NumberAdder]\n///**\n// * Represents a class that can combine a list of numbers.\n// * @implements\n//Combiner<number> - This class implements the Combiner interface, specifying that\n//it works with numbers.\n// */\n//class NumberAdder implements Combiner<number> {\n//\n//   \n///**\n//     * Combines a list of numbers by adding them together.\n//     * @param l -\n//The list of numbers to be combined.\n//     * @returns The result of adding all the\n//numbers in the list together.\n//     */\n//    combine(l: number[]): number {\n//       \n//// Uses the reduce method to add all the numbers in the list together.\n//       \n//return l.reduce((prev, curr) => prev + curr)\n//    }\n//}\n//\n///**\n// * Represents an\n//interface for combining a list of values.\n// * @template T - Specifies the type of\n//values that can be combined.\n// */\n//interface Combiner<T> {\n//\n//    /**\n//     *\n//Combines a list of values.\n//     * @param l - The list of values to be combined.\n//\n//    * @returns The result of combining the values.\n//     */\n//    combine(l: T[]):\n//T\n//}\n//ce-generator.ts__98_0-103_1[Class][NumberAdder]\nclass NumberAdder implements Combiner<number> {\n// ce-generator.ts__29_4-31_5[Method][combine]\n// ce-generator.ts__100_4-102_5[Method][combine]\n    combine(l: number[]): number {\n        return l.reduce((prev, curr) => prev + curr)\n    }\n}\n\n//ce-generator.ts__34_0-42_1[Class][ConcreteSequenceGenerator]\n///**\n// * Represents a class that generates a sequence of values using a specified\n//combiner.\n// * @template T - Specifies the type of values that will be generated.\n//\n//*/\n//class ConcreteSequenceGenerator extends SequenceGenerator<number>\n//{\n//\n//\t\t\n//\tconstructor(generationLength: number) {\n//\t        super(2,\n//generationLength, new NumberAdder());\n//\t    }\n//\t\n//\tgetStartingSequence(): number[]\n//{\n//\t        return [0, 1];\n//\t    }\n//}\n//\n///**\n// * Represents a class that can combine a\n//list of numbers.\n// * @implements Combiner<number> - This class implements the\n//Combiner interface, specifying that it works with numbers.\n// */\n//class NumberAdder\n//implements Combiner<number> {\n//\n//\t\t\n//\tcombine(l: number[]): number {\n//\t       \n//return l.reduce((prev, curr) => prev + curr)\n//\t    }\n//}\n//\n///**\n// * Represents an\n//interface for combining a list of values.\n// * @template T - Specifies the type of\n//values that can be combined.\n// */\n//interface Combiner<T> {\n//\n//    /**\n//     *\n//Combines a list of values.\n//     * @param l - The list of values to be combined.\n//\n//    * @returns The result of combining the values.\n//     */\n//    combine(l: T[]):\n//T\n//}\n//ce-generator.ts__106_0-116_1[Class][ConcreteSequenceGenerator]\nclass ConcreteSequenceGenerator extends SequenceGenerator<number> {\n// ce-generator.ts__35_4-37_5[Method][constructor]\n// ce-generator.ts__108_4-110_5[Method][constructor]\n    constructor(generationLength: number) {\n        super(2, generationLength, new NumberAdder());\n    }\n\n// ce-generator.ts__39_4-41_5[Method][getStartingSequence]\n// ce-generator.ts__113_4-115_5[Method][getStartingSequence]\n    getStartingSequence(): number[] {\n        return [0, 1];\n    }\n}\n\n////The ConcreteSequenceGenerator class extends the SequenceGenerator class\n//and\n////provides a concrete implementation of the getStartingSequence method. It\n//takes\n////in a generationLength parameter and uses it to initialize the\n//generationLength\n////property of the parent class. It also takes in a NumberAdder\n//instance as the\n////combiner, which is used to combine the elements in the\n//sequence. This class\n////demonstrates how the SequenceGenerator class can be\n//extended and customized\n////for specific use cases. The generateSequence method is\n//called in the main\n////function, which creates a new instance of the\n//ConcreteSequenceGenerator class\n////with a generationLength of 10 and calls the\n//generateSequence method to generate\n////a sequence of numbers. The result is then\n//logged to the console using the\n////console.log method. This shows how the\n//SequenceGenerator class can be used in\n////a practical\n//application.\n//ce-generator.ts__44_0-46_1[Function][main]\n//ce-generator.ts__143_0-145_1[Function][main]\nfunction main() {\n    console.log((new ConcreteSequenceGenerator(10)).generateSequence());\n}\n\nmain();",
        "scriptKindName": "TS",
        "projectRootPath": "/Users/joshuaying/emblem/semantic-graph/test-ts/src"
      }
    }
Info 10   [17:46:28.639] Starting updateGraphWorker: Project: /dev/null/inferredProject1*
Info 11   [17:46:28.838] Finishing updateGraphWorker: Project: /dev/null/inferredProject1* Version: 1 structureChanged: true structureIsReused:: Not Elapsed: 199.59645891189575ms
Info 12   [17:46:28.838] Project '/dev/null/inferredProject1*' (Inferred)
Info 13   [17:46:28.839] 	Files (8)
	/Users/joshuaying/emblem/semantic-graph/test-ts/node_modules/typescript/lib/lib.d.ts
	/Users/joshuaying/emblem/semantic-graph/test-ts/node_modules/typescript/lib/lib.es5.d.ts
	/Users/joshuaying/emblem/semantic-graph/test-ts/node_modules/typescript/lib/lib.dom.d.ts
	/Users/joshuaying/emblem/semantic-graph/test-ts/node_modules/typescript/lib/lib.webworker.importscripts.d.ts
	/Users/joshuaying/emblem/semantic-graph/test-ts/node_modules/typescript/lib/lib.scripthost.d.ts
	/Users/joshuaying/emblem/semantic-graph/test-ts/node_modules/typescript/lib/lib.decorators.d.ts
	/Users/joshuaying/emblem/semantic-graph/test-ts/node_modules/typescript/lib/lib.decorators.legacy.d.ts
	/Users/joshuaying/emblem/semantic-graph/test-ts/src/sequence-generator.ts


	../node_modules/typescript/lib/lib.d.ts
	  Default library for target 'es5'
	../node_modules/typescript/lib/lib.es5.d.ts
	  Library referenced via 'es5' from file '../node_modules/typescript/lib/lib.d.ts'
	../node_modules/typescript/lib/lib.dom.d.ts
	  Library referenced via 'dom' from file '../node_modules/typescript/lib/lib.d.ts'
	../node_modules/typescript/lib/lib.webworker.importscripts.d.ts
	  Library referenced via 'webworker.importscripts' from file '../node_modules/typescript/lib/lib.d.ts'
	../node_modules/typescript/lib/lib.scripthost.d.ts
	  Library referenced via 'scripthost' from file '../node_modules/typescript/lib/lib.d.ts'
	../node_modules/typescript/lib/lib.decorators.d.ts
	  Library referenced via 'decorators' from file '../node_modules/typescript/lib/lib.es5.d.ts'
	../node_modules/typescript/lib/lib.decorators.legacy.d.ts
	  Library referenced via 'decorators.legacy' from file '../node_modules/typescript/lib/lib.es5.d.ts'
	sequence-generator.ts
	  Root file specified for compilation

Info 14   [17:46:28.839] -----------------------------------------------
Info 15   [17:46:28.839] Project '/dev/null/inferredProject1*' (Inferred)
Info 15   [17:46:28.839] 	Files (8)

Info 15   [17:46:28.839] -----------------------------------------------
Info 15   [17:46:28.839] Open files: 
Info 15   [17:46:28.839] 	FileName: /Users/joshuaying/emblem/semantic-graph/test-ts/src/sequence-generator.ts ProjectRootPath: /Users/joshuaying/emblem/semantic-graph/test-ts/src
Info 15   [17:46:28.839] 		Projects: /dev/null/inferredProject1*
Perf 15   [17:46:28.839] 1::open: async elapsed time (in milliseconds) 202.6989
Info 16   [17:46:28.839] request:
    {
      "seq": 2,
      "type": "request",
      "command": "open",
      "arguments": {
        "file": "/Users/joshuaying/emblem/semantic-graph/test-ts/src/index.ts",
        "fileContent": "// // demonstrating why we need to bubble up from child to parent\n// type WrappedType = number | void;\n\n// type WrapperType = {\n//   a: string,\n//   b: WrappedType\n// }\n\n// function f() {\n//   const x: WrapperType = {\n//     a: 'hello',\n//     b: 5\n//   }\n\n//   console.log(x.b);\n// }\n\n// interface I {\n//   m(): string;\n// }\n\n// class C implements I {\n//   m() {\n//     return \"hello\";\n//   }\n// }\n\n\n\n/*\n// Tests for LSP idiosyncracy where subclass overriding / implementation methods are referencedBy the superclass method/field.\n// method1 should NOT referenceInDefinition B.method2 (only A.method2)\nabstract class A {\n  method1() {\n    this.method2()\n  }\n  abstract method2();\n}\n\nclass B extends A {\n  method2() {}\n}\n*/\n\n\n\n/*\n// Tests for bubbling children's referenceInDefinition up to parents.\n// A should referenceInDefinition B.\nfunction B() {}\n\nclass A {\n  m1() {\n    B()\n  }\n}\n*/\n\n// class A {\n//   b: B\n// }\n\n// class B {\n//   a: A\n//   constructor(a: A) {\n//     this.a = a;\n//     this.a.b = this;\n//   }\n// }\n\n// console.log(new B(new A()));",
        "scriptKindName": "TS",
        "projectRootPath": "/Users/joshuaying/emblem/semantic-graph/test-ts/src"
      }
    }
Info 17   [17:46:28.840] Starting updateGraphWorker: Project: /dev/null/inferredProject1*
Info 18   [17:46:28.842] Finishing updateGraphWorker: Project: /dev/null/inferredProject1* Version: 2 structureChanged: true structureIsReused:: Not Elapsed: 2.2171249389648438ms
Info 19   [17:46:28.842] Project '/dev/null/inferredProject1*' (Inferred)
Info 20   [17:46:28.842] 	Files (9)
	/Users/joshuaying/emblem/semantic-graph/test-ts/node_modules/typescript/lib/lib.d.ts
	/Users/joshuaying/emblem/semantic-graph/test-ts/node_modules/typescript/lib/lib.es5.d.ts
	/Users/joshuaying/emblem/semantic-graph/test-ts/node_modules/typescript/lib/lib.dom.d.ts
	/Users/joshuaying/emblem/semantic-graph/test-ts/node_modules/typescript/lib/lib.webworker.importscripts.d.ts
	/Users/joshuaying/emblem/semantic-graph/test-ts/node_modules/typescript/lib/lib.scripthost.d.ts
	/Users/joshuaying/emblem/semantic-graph/test-ts/node_modules/typescript/lib/lib.decorators.d.ts
	/Users/joshuaying/emblem/semantic-graph/test-ts/node_modules/typescript/lib/lib.decorators.legacy.d.ts
	/Users/joshuaying/emblem/semantic-graph/test-ts/src/sequence-generator.ts
	/Users/joshuaying/emblem/semantic-graph/test-ts/src/index.ts


	../node_modules/typescript/lib/lib.d.ts
	  Default library for target 'es5'
	../node_modules/typescript/lib/lib.es5.d.ts
	  Library referenced via 'es5' from file '../node_modules/typescript/lib/lib.d.ts'
	../node_modules/typescript/lib/lib.dom.d.ts
	  Library referenced via 'dom' from file '../node_modules/typescript/lib/lib.d.ts'
	../node_modules/typescript/lib/lib.webworker.importscripts.d.ts
	  Library referenced via 'webworker.importscripts' from file '../node_modules/typescript/lib/lib.d.ts'
	../node_modules/typescript/lib/lib.scripthost.d.ts
	  Library referenced via 'scripthost' from file '../node_modules/typescript/lib/lib.d.ts'
	../node_modules/typescript/lib/lib.decorators.d.ts
	  Library referenced via 'decorators' from file '../node_modules/typescript/lib/lib.es5.d.ts'
	../node_modules/typescript/lib/lib.decorators.legacy.d.ts
	  Library referenced via 'decorators.legacy' from file '../node_modules/typescript/lib/lib.es5.d.ts'
	sequence-generator.ts
	  Root file specified for compilation
	index.ts
	  Root file specified for compilation

Info 21   [17:46:28.842] -----------------------------------------------
Info 22   [17:46:28.842] Project '/dev/null/inferredProject1*' (Inferred)
Info 22   [17:46:28.842] 	Files (9)

Info 22   [17:46:28.842] -----------------------------------------------
Info 22   [17:46:28.842] Open files: 
Info 22   [17:46:28.842] 	FileName: /Users/joshuaying/emblem/semantic-graph/test-ts/src/sequence-generator.ts ProjectRootPath: /Users/joshuaying/emblem/semantic-graph/test-ts/src
Info 22   [17:46:28.842] 		Projects: /dev/null/inferredProject1*
Info 22   [17:46:28.842] 	FileName: /Users/joshuaying/emblem/semantic-graph/test-ts/src/index.ts ProjectRootPath: /Users/joshuaying/emblem/semantic-graph/test-ts/src
Info 22   [17:46:28.842] 		Projects: /dev/null/inferredProject1*
Perf 22   [17:46:28.842] 2::open: async elapsed time (in milliseconds) 2.7908
Info 23   [17:46:28.842] request:
    {
      "seq": 3,
      "type": "request",
      "command": "open",
      "arguments": {
        "file": "/Users/joshuaying/emblem/semantic-graph/test-ts/src/bfs-test.ts",
        "fileContent": "//st.ts__0_0-11_1[Class][A]\n//st.ts__1_0-15_1[Class][A]\nclass A {\n// st.ts__1_4-1_18[Property][aField]\n// st.ts__3_4-3_18[Property][aField]\n    aField: number\n// st.ts__2_4-4_5[Method][constructor]\n// st.ts__5_4-7_5[Method][constructor]\n    constructor() {\n        this.aField = 3\n    }\n// st.ts__5_4-10_5[Method][M]\n// st.ts__9_4-14_5[Method][M]\n    M() {\n        const b = new B();\n        b.C();\n        b.bField2;\n        this.aField;\n    }\n}\n\n//Class B is a blueprint for creating objects that have three fields: bField,\n//bField2, and bField3. These fields are all of type number. The constructor\n//function initializes the values of bField and bField2 to 4 and 6, respectively.\n//The C method allows access to the value of bField, while the D method does not\n//have any functionality. This class can be used to create objects with specific\n//numerical properties and methods.\n//st.ts__13_0-29_1[Class][B]\n//Class B is a blueprint for creating objects that have three fields: bField,\n//bField2, and bField3. These fields are all of type number. The constructor\n//function initializes the values of bField and bField2 to 4 and 6, respectively.\n//The C method allows access to the value of bField, while the D method does not\n//have any functionality. This class can be used to create objects with specific\n//numerical properties and methods.\n//st.ts__24_0-46_1[Class][B]\nclass B {\n// st.ts__14_4-14_18[Property][bField]\n// st.ts__26_4-26_18[Property][bField]\n    bField: number\n// st.ts__15_4-15_19[Property][bField2]\n// st.ts__28_4-28_19[Property][bField2]\n    bField2: number\n// st.ts__16_4-16_19[Property][bField3]\n// st.ts__30_4-30_19[Property][bField3]\n    bField3: number\n// st.ts__17_4-20_5[Method][constructor]\n// st.ts__32_4-35_5[Method][constructor]\n    constructor() {\n        this.bField = 4;\n        this.bField2 = 6;\n    }\n\n// st.ts__22_4-24_5[Method][C]\n// st.ts__38_4-40_5[Method][C]\n    C() {\n        this.bField;\n    }\n\n// st.ts__26_4-28_5[Method][D]\n// st.ts__43_4-45_5[Method][D]\n    D() {\n\n    }\n}",
        "scriptKindName": "TS",
        "projectRootPath": "/Users/joshuaying/emblem/semantic-graph/test-ts/src"
      }
    }
Info 24   [17:46:28.842] Starting updateGraphWorker: Project: /dev/null/inferredProject1*
Info 25   [17:46:28.844] Finishing updateGraphWorker: Project: /dev/null/inferredProject1* Version: 3 structureChanged: true structureIsReused:: Not Elapsed: 2.0497078895568848ms
Info 26   [17:46:28.844] Project '/dev/null/inferredProject1*' (Inferred)
Info 27   [17:46:28.845] 	Files (10)
	/Users/joshuaying/emblem/semantic-graph/test-ts/node_modules/typescript/lib/lib.d.ts
	/Users/joshuaying/emblem/semantic-graph/test-ts/node_modules/typescript/lib/lib.es5.d.ts
	/Users/joshuaying/emblem/semantic-graph/test-ts/node_modules/typescript/lib/lib.dom.d.ts
	/Users/joshuaying/emblem/semantic-graph/test-ts/node_modules/typescript/lib/lib.webworker.importscripts.d.ts
	/Users/joshuaying/emblem/semantic-graph/test-ts/node_modules/typescript/lib/lib.scripthost.d.ts
	/Users/joshuaying/emblem/semantic-graph/test-ts/node_modules/typescript/lib/lib.decorators.d.ts
	/Users/joshuaying/emblem/semantic-graph/test-ts/node_modules/typescript/lib/lib.decorators.legacy.d.ts
	/Users/joshuaying/emblem/semantic-graph/test-ts/src/sequence-generator.ts
	/Users/joshuaying/emblem/semantic-graph/test-ts/src/index.ts
	/Users/joshuaying/emblem/semantic-graph/test-ts/src/bfs-test.ts


	../node_modules/typescript/lib/lib.d.ts
	  Default library for target 'es5'
	../node_modules/typescript/lib/lib.es5.d.ts
	  Library referenced via 'es5' from file '../node_modules/typescript/lib/lib.d.ts'
	../node_modules/typescript/lib/lib.dom.d.ts
	  Library referenced via 'dom' from file '../node_modules/typescript/lib/lib.d.ts'
	../node_modules/typescript/lib/lib.webworker.importscripts.d.ts
	  Library referenced via 'webworker.importscripts' from file '../node_modules/typescript/lib/lib.d.ts'
	../node_modules/typescript/lib/lib.scripthost.d.ts
	  Library referenced via 'scripthost' from file '../node_modules/typescript/lib/lib.d.ts'
	../node_modules/typescript/lib/lib.decorators.d.ts
	  Library referenced via 'decorators' from file '../node_modules/typescript/lib/lib.es5.d.ts'
	../node_modules/typescript/lib/lib.decorators.legacy.d.ts
	  Library referenced via 'decorators.legacy' from file '../node_modules/typescript/lib/lib.es5.d.ts'
	sequence-generator.ts
	  Root file specified for compilation
	index.ts
	  Root file specified for compilation
	bfs-test.ts
	  Root file specified for compilation

Info 28   [17:46:28.845] -----------------------------------------------
Info 29   [17:46:28.845] Project '/dev/null/inferredProject1*' (Inferred)
Info 29   [17:46:28.845] 	Files (10)

Info 29   [17:46:28.845] -----------------------------------------------
Info 29   [17:46:28.845] Open files: 
Info 29   [17:46:28.845] 	FileName: /Users/joshuaying/emblem/semantic-graph/test-ts/src/sequence-generator.ts ProjectRootPath: /Users/joshuaying/emblem/semantic-graph/test-ts/src
Info 29   [17:46:28.845] 		Projects: /dev/null/inferredProject1*
Info 29   [17:46:28.845] 	FileName: /Users/joshuaying/emblem/semantic-graph/test-ts/src/index.ts ProjectRootPath: /Users/joshuaying/emblem/semantic-graph/test-ts/src
Info 29   [17:46:28.845] 		Projects: /dev/null/inferredProject1*
Info 29   [17:46:28.845] 	FileName: /Users/joshuaying/emblem/semantic-graph/test-ts/src/bfs-test.ts ProjectRootPath: /Users/joshuaying/emblem/semantic-graph/test-ts/src
Info 29   [17:46:28.845] 		Projects: /dev/null/inferredProject1*
Perf 29   [17:46:28.845] 3::open: async elapsed time (in milliseconds) 2.5336
Info 30   [17:46:28.845] request:
    {
      "seq": 4,
      "type": "request",
      "command": "navtree",
      "arguments": {
        "file": "/Users/joshuaying/emblem/semantic-graph/test-ts/src/sequence-generator.ts"
      }
    }
Perf 31   [17:46:28.856] 4::navtree: elapsed time (in milliseconds) 11.2477
Info 32   [17:46:28.856] response:
    {"seq":0,"type":"response","command":"navtree","request_seq":4,"success":true,"body":{"text":"<global>","kind":"script","kindModifiers":"","spans":[{"start":{"line":1,"offset":1},"end":{"line":389,"offset":8}}],"childItems":[{"text":"Combiner","kind":"interface","kindModifiers":"","spans":[{"start":{"line":220,"offset":1},"end":{"line":224,"offset":2}}],"nameSpan":{"start":{"line":220,"offset":11},"end":{"line":220,"offset":19}},"childItems":[{"text":"combine","kind":"method","kindModifiers":"","spans":[{"start":{"line":223,"offset":5},"end":{"line":223,"offset":23}}],"nameSpan":{"start":{"line":223,"offset":5},"end":{"line":223,"offset":12}}}]},{"text":"ConcreteSequenceGenerator","kind":"class","kindModifiers":"","spans":[{"start":{"line":345,"offset":1},"end":{"line":357,"offset":2}}],"nameSpan":{"start":{"line":345,"offset":7},"end":{"line":345,"offset":32}},"childItems":[{"text":"constructor","kind":"constructor","kindModifiers":"","spans":[{"start":{"line":348,"offset":5},"end":{"line":350,"offset":6}}]},{"text":"getStartingSequence","kind":"method","kindModifiers":"","spans":[{"start":{"line":354,"offset":5},"end":{"line":356,"offset":6}}],"nameSpan":{"start":{"line":354,"offset":5},"end":{"line":354,"offset":24}}}]},{"text":"main","kind":"function","kindModifiers":"","spans":[{"start":{"line":385,"offset":1},"end":{"line":387,"offset":2}}],"nameSpan":{"start":{"line":385,"offset":10},"end":{"line":385,"offset":14}}},{"text":"NumberAdder","kind":"class","kindModifiers":"","spans":[{"start":{"line":280,"offset":1},"end":{"line":286,"offset":2}}],"nameSpan":{"start":{"line":280,"offset":7},"end":{"line":280,"offset":18}},"childItems":[{"text":"combine","kind":"method","kindModifiers":"","spans":[{"start":{"line":283,"offset":5},"end":{"line":285,"offset":6}}],"nameSpan":{"start":{"line":283,"offset":5},"end":{"line":283,"offset":12}},"childItems":[{"text":"l.reduce() callback","kind":"function","kindModifiers":"","spans":[{"start":{"line":284,"offset":25},"end":{"line":284,"offset":52}}]}]}]},{"text":"SequenceGenerator","kind":"class","kindModifiers":"abstract","spans":[{"start":{"line":182,"offset":1},"end":{"line":215,"offset":2}}],"nameSpan":{"start":{"line":182,"offset":16},"end":{"line":182,"offset":33}},"childItems":[{"text":"constructor","kind":"constructor","kindModifiers":"","spans":[{"start":{"line":195,"offset":5},"end":{"line":199,"offset":6}}]},{"text":"combiner","kind":"property","kindModifiers":"","spans":[{"start":{"line":185,"offset":5},"end":{"line":185,"offset":27}}],"nameSpan":{"start":{"line":185,"offset":5},"end":{"line":185,"offset":13}}},{"text":"generateSequence","kind":"method","kindModifiers":"","spans":[{"start":{"line":203,"offset":5},"end":{"line":210,"offset":6}}],"nameSpan":{"start":{"line":203,"offset":5},"end":{"line":203,"offset":21}},"childItems":[{"text":"i","kind":"var","kindModifiers":"","spans":[{"start":{"line":205,"offset":18},"end":{"line":205,"offset":23}}],"nameSpan":{"start":{"line":205,"offset":18},"end":{"line":205,"offset":19}}},{"text":"latest_window","kind":"const","kindModifiers":"","spans":[{"start":{"line":206,"offset":19},"end":{"line":206,"offset":84}}],"nameSpan":{"start":{"line":206,"offset":19},"end":{"line":206,"offset":32}}},{"text":"sequence","kind":"var","kindModifiers":"","spans":[{"start":{"line":204,"offset":13},"end":{"line":204,"offset":50}}],"nameSpan":{"start":{"line":204,"offset":13},"end":{"line":204,"offset":21}}}]},{"text":"generationLength","kind":"property","kindModifiers":"","spans":[{"start":{"line":191,"offset":5},"end":{"line":191,"offset":30}}],"nameSpan":{"start":{"line":191,"offset":5},"end":{"line":191,"offset":21}}},{"text":"getStartingSequence","kind":"method","kindModifiers":"abstract","spans":[{"start":{"line":214,"offset":5},"end":{"line":214,"offset":41}}],"nameSpan":{"start":{"line":214,"offset":14},"end":{"line":214,"offset":33}}},{"text":"windowSize","kind":"property","kindModifiers":"","spans":[{"start":{"line":188,"offset":5},"end":{"line":188,"offset":24}}],"nameSpan":{"start":{"line":188,"offset":5},"end":{"line":188,"offset":15}}}]}]}}
Info 33   [17:46:28.860] request:
    {
      "seq": 5,
      "type": "request",
      "command": "navtree",
      "arguments": {
        "file": "/Users/joshuaying/emblem/semantic-graph/test-ts/src/index.ts"
      }
    }
Perf 34   [17:46:28.861] 5::navtree: elapsed time (in milliseconds) 0.2445
Info 35   [17:46:28.861] response:
    {"seq":0,"type":"response","command":"navtree","request_seq":5,"success":true,"body":{"text":"<global>","kind":"script","kindModifiers":"","spans":[{"start":{"line":1,"offset":1},"end":{"line":71,"offset":32}}]}}
Info 36   [17:46:28.861] request:
    {
      "seq": 6,
      "type": "request",
      "command": "navtree",
      "arguments": {
        "file": "/Users/joshuaying/emblem/semantic-graph/test-ts/src/bfs-test.ts"
      }
    }
Perf 37   [17:46:28.862] 6::navtree: elapsed time (in milliseconds) 0.6184
Info 38   [17:46:28.862] response:
    {"seq":0,"type":"response","command":"navtree","request_seq":6,"success":true,"body":{"text":"<global>","kind":"script","kindModifiers":"","spans":[{"start":{"line":1,"offset":1},"end":{"line":64,"offset":2}}],"childItems":[{"text":"A","kind":"class","kindModifiers":"","spans":[{"start":{"line":3,"offset":1},"end":{"line":20,"offset":2}}],"nameSpan":{"start":{"line":3,"offset":7},"end":{"line":3,"offset":8}},"childItems":[{"text":"constructor","kind":"constructor","kindModifiers":"","spans":[{"start":{"line":9,"offset":5},"end":{"line":11,"offset":6}}]},{"text":"aField","kind":"property","kindModifiers":"","spans":[{"start":{"line":6,"offset":5},"end":{"line":6,"offset":19}}],"nameSpan":{"start":{"line":6,"offset":5},"end":{"line":6,"offset":11}}},{"text":"M","kind":"method","kindModifiers":"","spans":[{"start":{"line":14,"offset":5},"end":{"line":19,"offset":6}}],"nameSpan":{"start":{"line":14,"offset":5},"end":{"line":14,"offset":6}},"childItems":[{"text":"b","kind":"const","kindModifiers":"","spans":[{"start":{"line":15,"offset":15},"end":{"line":15,"offset":26}}],"nameSpan":{"start":{"line":15,"offset":15},"end":{"line":15,"offset":16}}}]}]},{"text":"B","kind":"class","kindModifiers":"","spans":[{"start":{"line":36,"offset":1},"end":{"line":64,"offset":2}}],"nameSpan":{"start":{"line":36,"offset":7},"end":{"line":36,"offset":8}},"childItems":[{"text":"constructor","kind":"constructor","kindModifiers":"","spans":[{"start":{"line":48,"offset":5},"end":{"line":51,"offset":6}}]},{"text":"bField","kind":"property","kindModifiers":"","spans":[{"start":{"line":39,"offset":5},"end":{"line":39,"offset":19}}],"nameSpan":{"start":{"line":39,"offset":5},"end":{"line":39,"offset":11}}},{"text":"bField2","kind":"property","kindModifiers":"","spans":[{"start":{"line":42,"offset":5},"end":{"line":42,"offset":20}}],"nameSpan":{"start":{"line":42,"offset":5},"end":{"line":42,"offset":12}}},{"text":"bField3","kind":"property","kindModifiers":"","spans":[{"start":{"line":45,"offset":5},"end":{"line":45,"offset":20}}],"nameSpan":{"start":{"line":45,"offset":5},"end":{"line":45,"offset":12}}},{"text":"C","kind":"method","kindModifiers":"","spans":[{"start":{"line":55,"offset":5},"end":{"line":57,"offset":6}}],"nameSpan":{"start":{"line":55,"offset":5},"end":{"line":55,"offset":6}}},{"text":"D","kind":"method","kindModifiers":"","spans":[{"start":{"line":61,"offset":5},"end":{"line":63,"offset":6}}],"nameSpan":{"start":{"line":61,"offset":5},"end":{"line":61,"offset":6}}}]}]}}
Info 39   [17:46:28.863] request:
    {
      "seq": 7,
      "type": "request",
      "command": "references",
      "arguments": {
        "file": "/Users/joshuaying/emblem/semantic-graph/test-ts/src/sequence-generator.ts",
        "line": 182,
        "offset": 1
      }
    }
Info 40   [17:46:28.865] Finding references to /Users/joshuaying/emblem/semantic-graph/test-ts/src/sequence-generator.ts position 5152 in project /dev/null/inferredProject1*
Perf 41   [17:46:28.884] 7::references: elapsed time (in milliseconds) 20.4207
Info 42   [17:46:28.884] response:
    {"seq":0,"type":"response","command":"references","request_seq":7,"success":true,"body":{"refs":[{"file":"/Users/joshuaying/emblem/semantic-graph/test-ts/src/sequence-generator.ts","start":{"line":182,"offset":16},"end":{"line":182,"offset":33},"contextStart":{"line":182,"offset":1},"contextEnd":{"line":215,"offset":2},"isWriteAccess":true,"isDefinition":true},{"file":"/Users/joshuaying/emblem/semantic-graph/test-ts/src/sequence-generator.ts","start":{"line":345,"offset":41},"end":{"line":345,"offset":58},"isWriteAccess":false,"isDefinition":false}],"symbolName":"","symbolStartOffset":0,"symbolDisplayString":""}}
Info 43   [17:46:28.885] request:
    {
      "seq": 8,
      "type": "request",
      "command": "references",
      "arguments": {
        "file": "/Users/joshuaying/emblem/semantic-graph/test-ts/src/sequence-generator.ts",
        "line": 185,
        "offset": 5
      }
    }
Info 44   [17:46:28.886] Finding references to /Users/joshuaying/emblem/semantic-graph/test-ts/src/sequence-generator.ts position 5294 in project /dev/null/inferredProject1*
Perf 45   [17:46:28.892] 8::references: elapsed time (in milliseconds) 7.2912
Info 46   [17:46:28.893] response:
    {"seq":0,"type":"response","command":"references","request_seq":8,"success":true,"body":{"refs":[{"file":"/Users/joshuaying/emblem/semantic-graph/test-ts/src/sequence-generator.ts","start":{"line":185,"offset":5},"end":{"line":185,"offset":13},"contextStart":{"line":185,"offset":5},"contextEnd":{"line":185,"offset":27},"isWriteAccess":false,"isDefinition":true},{"file":"/Users/joshuaying/emblem/semantic-graph/test-ts/src/sequence-generator.ts","start":{"line":198,"offset":14},"end":{"line":198,"offset":22},"isWriteAccess":true,"isDefinition":false},{"file":"/Users/joshuaying/emblem/semantic-graph/test-ts/src/sequence-generator.ts","start":{"line":207,"offset":32},"end":{"line":207,"offset":40},"isWriteAccess":false,"isDefinition":false}],"symbolName":"combiner","symbolStartOffset":5,"symbolDisplayString":"(property) SequenceGenerator<T>.combiner: Combiner<T>"}}
Info 47   [17:46:28.893] request:
    {
      "seq": 9,
      "type": "request",
      "command": "references",
      "arguments": {
        "file": "/Users/joshuaying/emblem/semantic-graph/test-ts/src/sequence-generator.ts",
        "line": 188,
        "offset": 5
      }
    }
Info 48   [17:46:28.894] Finding references to /Users/joshuaying/emblem/semantic-graph/test-ts/src/sequence-generator.ts position 5425 in project /dev/null/inferredProject1*
Perf 49   [17:46:28.895] 9::references: elapsed time (in milliseconds) 1.9116
Info 50   [17:46:28.895] response:
    {"seq":0,"type":"response","command":"references","request_seq":9,"success":true,"body":{"refs":[{"file":"/Users/joshuaying/emblem/semantic-graph/test-ts/src/sequence-generator.ts","start":{"line":188,"offset":5},"end":{"line":188,"offset":15},"contextStart":{"line":188,"offset":5},"contextEnd":{"line":188,"offset":24},"isWriteAccess":false,"isDefinition":true},{"file":"/Users/joshuaying/emblem/semantic-graph/test-ts/src/sequence-generator.ts","start":{"line":196,"offset":14},"end":{"line":196,"offset":24},"isWriteAccess":true,"isDefinition":false},{"file":"/Users/joshuaying/emblem/semantic-graph/test-ts/src/sequence-generator.ts","start":{"line":206,"offset":73},"end":{"line":206,"offset":83},"isWriteAccess":false,"isDefinition":false}],"symbolName":"windowSize","symbolStartOffset":5,"symbolDisplayString":"(property) SequenceGenerator<T>.windowSize: number"}}
Info 51   [17:46:28.896] request:
    {
      "seq": 10,
      "type": "request",
      "command": "references",
      "arguments": {
        "file": "/Users/joshuaying/emblem/semantic-graph/test-ts/src/sequence-generator.ts",
        "line": 191,
        "offset": 5
      }
    }
Info 52   [17:46:28.897] Finding references to /Users/joshuaying/emblem/semantic-graph/test-ts/src/sequence-generator.ts position 5565 in project /dev/null/inferredProject1*
Perf 53   [17:46:28.898] 10::references: elapsed time (in milliseconds) 1.8252
Info 54   [17:46:28.898] response:
    {"seq":0,"type":"response","command":"references","request_seq":10,"success":true,"body":{"refs":[{"file":"/Users/joshuaying/emblem/semantic-graph/test-ts/src/sequence-generator.ts","start":{"line":191,"offset":5},"end":{"line":191,"offset":21},"contextStart":{"line":191,"offset":5},"contextEnd":{"line":191,"offset":30},"isWriteAccess":false,"isDefinition":true},{"file":"/Users/joshuaying/emblem/semantic-graph/test-ts/src/sequence-generator.ts","start":{"line":197,"offset":14},"end":{"line":197,"offset":30},"isWriteAccess":true,"isDefinition":false},{"file":"/Users/joshuaying/emblem/semantic-graph/test-ts/src/sequence-generator.ts","start":{"line":205,"offset":34},"end":{"line":205,"offset":50},"isWriteAccess":false,"isDefinition":false}],"symbolName":"generationLength","symbolStartOffset":5,"symbolDisplayString":"(property) SequenceGenerator<T>.generationLength: number"}}
Info 55   [17:46:28.899] request:
    {
      "seq": 11,
      "type": "request",
      "command": "references",
      "arguments": {
        "file": "/Users/joshuaying/emblem/semantic-graph/test-ts/src/sequence-generator.ts",
        "line": 195,
        "offset": 5
      }
    }
Info 56   [17:46:28.899] Finding references to /Users/joshuaying/emblem/semantic-graph/test-ts/src/sequence-generator.ts position 5696 in project /dev/null/inferredProject1*
Perf 57   [17:46:28.903] 11::references: elapsed time (in milliseconds) 3.4779
Info 58   [17:46:28.903] response:
    {"seq":0,"type":"response","command":"references","request_seq":11,"success":true,"body":{"refs":[{"file":"/Users/joshuaying/emblem/semantic-graph/test-ts/src/sequence-generator.ts","start":{"line":195,"offset":5},"end":{"line":195,"offset":16},"contextStart":{"line":195,"offset":5},"contextEnd":{"line":199,"offset":6},"isWriteAccess":false,"isDefinition":true},{"file":"/Users/joshuaying/emblem/semantic-graph/test-ts/src/sequence-generator.ts","start":{"line":349,"offset":9},"end":{"line":349,"offset":14},"isWriteAccess":false,"isDefinition":false}],"symbolName":"constructor","symbolStartOffset":5,"symbolDisplayString":"constructor SequenceGenerator<T>(windowSize: number, generationLength: number, combiner: Combiner<T>): SequenceGenerator<T>"}}
Info 59   [17:46:28.903] request:
    {
      "seq": 12,
      "type": "request",
      "command": "references",
      "arguments": {
        "file": "/Users/joshuaying/emblem/semantic-graph/test-ts/src/sequence-generator.ts",
        "line": 203,
        "offset": 5
      }
    }
Info 60   [17:46:28.904] Finding references to /Users/joshuaying/emblem/semantic-graph/test-ts/src/sequence-generator.ts position 6024 in project /dev/null/inferredProject1*
Perf 61   [17:46:28.907] 12::references: elapsed time (in milliseconds) 4.1285
Info 62   [17:46:28.907] response:
    {"seq":0,"type":"response","command":"references","request_seq":12,"success":true,"body":{"refs":[{"file":"/Users/joshuaying/emblem/semantic-graph/test-ts/src/sequence-generator.ts","start":{"line":203,"offset":5},"end":{"line":203,"offset":21},"contextStart":{"line":203,"offset":5},"contextEnd":{"line":210,"offset":6},"isWriteAccess":true,"isDefinition":true},{"file":"/Users/joshuaying/emblem/semantic-graph/test-ts/src/sequence-generator.ts","start":{"line":386,"offset":53},"end":{"line":386,"offset":69},"isWriteAccess":false,"isDefinition":false}],"symbolName":"generateSequence","symbolStartOffset":5,"symbolDisplayString":"(method) SequenceGenerator<T>.generateSequence(): T[]"}}
